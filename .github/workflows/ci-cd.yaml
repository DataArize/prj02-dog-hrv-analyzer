name: CI-CD
on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy_to_cloud_function:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}

      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ secrets.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: pip install -r src/requirements.txt

      - name: Determine Function Name
        id: function_name
        run: |
          if [[ "${GITHUB_REF##*/}" == "develop" ]]; then
            echo "FUNCTION_NAME=${{ secrets.GCP_FUNCTION_NAME }}-dev" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "FUNCTION_NAME=${{ secrets.GCP_FUNCTION_NAME }}-prod" >> $GITHUB_ENV
          else
            echo "FUNCTION_NAME=${{ secrets.GCP_FUNCTION_NAME }}-staging" >> $GITHUB_ENV
          fi

      - name: Deploy to cloud function
        run: |
          gcloud functions deploy $FUNCTION_NAME \
          --gen-2 \
          --region=${{ secrets.PROJECT_REGION }} \
          --runtime=${{ secrets.PYTHON_RUNTIME }} \
          --trigger-bucket=${{ secrets.SOURCE_BUCKET_NAME }} \
          --source=src \
          --entry-point=process_sensor_data \
          --set-env-vars DATASET_ID=${{ secrets.DATASET_ID }},TABLE_ID=${{ secrets.TABLE_ID }} \
          --memory=2048 --cpu=2

      - name: Slack notification
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `Action Name: ${process.env.AS_WORKFLOW}\n Repository Name:${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} ${{ job.status }} in ${process.env.AS_TOOK}`,
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()